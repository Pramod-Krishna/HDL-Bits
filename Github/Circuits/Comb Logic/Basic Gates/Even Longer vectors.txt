module top_module( 
    input [99:0] in,
    output [98:0] out_both,
    output [99:1] out_any,
    output [99:0] out_different );
    
    always@(in)	begin
        for(int i=0; i<99; i=i+1)	begin
            out_both[i] = in[i] & in[i+1]; 
            out_any[i+1] = in[i] | in[i+1];
            out_different[i] = in[i] ^ in[i+1];
            out_different[99] = in[0] ^ in[99];
        end  
    end
    
	//assign out_different = ^in;			Wrong - gives single bit op
endmodule

*********OR***********
module top_module (
	input [99:0] in,
	output [98:0] out_both,
	output [99:1] out_any,
	output [99:0] out_different
);

	// See gatesv for explanations.
	assign out_both = in & in[99:1];
	assign out_any = in[99:1] | in ;
	assign out_different = in ^ {in[0], in[99:1]};
	
endmodule